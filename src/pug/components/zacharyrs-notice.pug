link(rel="import", href="../bower/showdown-element/showdown-element.html")
link(rel="import", href="../bower/neon-animation/neon-animation.html")

link(rel="import", href="styles/zacharyrs-app.html")


dom-module#zacharyrs-notice
  template
    style(is="custom-style", include="shared-styles").
      :host {
        display: block;
        box-sizing: border-box;
        width: calc(96vw - 2 * 96vw / 3 * 0.05);
        margin: auto;
        border-radius: 8px;
        background: url('/assets/img/crystal.jpg');
        background-size: cover;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);
        padding: 8px;
        text-align: center;
        color: var(--theme-grey-light);
        font-weight: 700 !important;
        font-size: 20px !important;
      }

      @media handheld, only screen and (max-width: 1080px) {
        :host {
          width: calc(96vw - 2 * 96vw / 2 * 0.05);
        }
      }

      @media handheld, only screen and (max-width: 640px) {
        :host {
          width: calc(96vw - 2 * 96vw / 1 * 0.05);
        }
      }
    showdown-element(markdown="[[notification]]", supportextra, highlightjs, fontawesome)
      div.markdown-html
  script(type="text/javascript").
      'use strict';

      class NoticeBox {
          get behaviors() {
              return [Polymer.NeonAnimationRunnerBehavior];
          }

          beforeRegister() {
              this.is = 'zacharyrs-notice';
              this.properties = {
                  notification: {
                      type: String,
                      value: ''
                  },
                  animationConfig: {
                      value: function() {
                          return {
                              'entry': [
                                  {
                                      name: 'scale-up-animation',
                                      node: this,
                                      timing: {
                                          duration: 300,
                                          delay: 0
                                      }
                                  },
                                  {
                                      name: 'fade-in-animation',
                                      node: this,
                                      timing: {
                                          duration: 200,
                                          delay: 100
                                      }
                                  }
                              ]
                          };
                      }
                  }
              };
          }
          created() {}
          ready() {}
          attached() {
              this.playAnimation('entry');
          }
          detached() {}
          attributeChanged() {}
      }

      Polymer(NoticeBox);
