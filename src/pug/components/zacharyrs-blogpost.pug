link(rel="import", href="../bower/polymer/polymer.html")
link(rel="import", href="../bower/iron-flex-layout/iron-flex-layout-classes.html")
link(rel="import", href="../bower/app-route/app-route.html")
link(rel="import", href="../bower/polymerfire/firebase-query.html")

link(rel="import", href="zacharyrs-blogbox.html")

link(rel="import", href="styles/zacharyrs-app.html")

dom-module#zacharyrs-blogpost
  template
    style(is="custom-style", include="shared-styles iron-flex").
      .container {
        @apply(--layout-horizontal);
        @apply(--layout-wrap);
        margin: 0 2vw 0 2vw;
      }

      zacharyrs-blogbox {
        --width: calc(96vw);
        --height: calc(96vw);
      }
    app-route(
      route="{{route}}",
      pattern="/:section/:postId",
      data="{{data}}"
    )
    template(is="dom-if", if="[[!_pinned]]")
      p.
        UNPINNED
      firebase-query(
        id="postQuery",
        app-name="zacharyrs",
        path="/blog/[[data.postId]]/content",
        data="{{blog-data}}"
      )
    template(is="dom-if", if="[[_pinned]]")
      p.
        PINNED
      firebase-query(
        id="pinnedQuery",
        app-name="zacharyrs",
        path="/pinned/[[data.postId]]/content",
        data="{{pinned-data}}"
      )
  script(type="text/javascript").
      'use strict';

      class BlogPost {
          beforeRegister() {
              this.is = 'zacharyrs-blogpost';
              this.properties = {
                  visible: {
                      type: Boolean,
                      value: false
                  },
                  data: {
                      type: Object,
                  },
                  _pinned: {
                      type: Boolean,
                      computed: '_checkPinned(data.section)'
                  }
              };
              this.observers = [
                  '_changedPage(data.postId)'
              ]
          }
          created() {}
          ready() {}
          attached() {}
          detached() {}
          attributeChanged() {}

          _checkPinned(section) {
              return section === 'pinned';
          }

          _changedPage(postId) {
              if(this.$.postQuery){
                  this.$.postQuery.path = null;
                  this.$.postQuery.path = '/blog/' + this.data.postId + '/content';
              } else if(this.$.pinnedQuery){
                  this.$.pinnedQuery.path = null;
                  this.$.pinnedQuery.path = '/pinned/' + this.data.postId + '/content';
              }
          }
      }

      Polymer(BlogPost);
