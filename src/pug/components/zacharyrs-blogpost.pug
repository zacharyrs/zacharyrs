link(rel="import", href="../bower/polymer/polymer.html")
link(rel="import", href="../bower/iron-flex-layout/iron-flex-layout-classes.html")
link(rel="import", href="../bower/app-route/app-route.html")
link(rel="import", href="../bower/polymerfire/firebase-query.html")

link(rel="import", href="zacharyrs-blogbox.html")

link(rel="import", href="styles/zacharyrs-app.html")

dom-module#zacharyrs-blogpost
  template
    style(is="custom-style", include="shared-styles iron-flex").
      .container {
        @apply(--layout-horizontal);
        @apply(--layout-wrap);
        margin: 0 2vw 0 2vw;
      }

      zacharyrs-blogbox {
        --width: calc(96vw);
        --height: calc(96vw);
      }
    app-route(
      route="{{route}}",
      pattern="/:postId",
      data="{{data}}"
    )
    firebase-query(
      id="postQuery",
      app-name="zacharyrs",
      path="/blog/[[data.postId]]",
      data="{{blog-data}}"
    )
    firebase-query(
      id="pinnedQuery",
      app-name="zacharyrs",
      path="/pinned/[[data.postId]]",
      data="{{pinned-data}}"
    )
    section.container
      template(is="dom-repeat", items="[[blog-data]]", as="post")
        zacharyrs-blogbox(post="[[post]]", visible="[[visible]]")
      template(is="dom-repeat", items="[[pinned-data]]", as="post")
        zacharyrs-blogbox(post="[[post]]", visible="[[visible]]")
  script(type="text/javascript").
      'use strict';

      class BlogPost {
          beforeRegister() {
              this.is = 'zacharyrs-blogpost';
              this.properties = {
                  visible: {
                      type: Boolean,
                      value: false
                  },
                  data: {
                      type: Object,
                  }
              };
              this.observers = [
                  '_changedPage(data.postId)'
              ]
          }
          created() {}
          ready() {}
          attached() {}
          detached() {}
          attributeChanged() {}

          _changedPage(postId) {
              this.$.postQuery.path = null;
              this.$.pinnedQuery.path = null;
              this.$.postQuery.path = '/blog/' + this.data.postId;
              this.$.pinnedQuery.path = '/pinned/' + this.data.postId;
          }
      }

      Polymer(BlogPost);
